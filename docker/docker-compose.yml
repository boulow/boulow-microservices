version: '3.8'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "boulow_tribe_dev"
    volumes:
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=testQ:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    restart: always
    networks:
      backend:
        aliases:
          - "kafka"
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      kafkaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "kafdrop"
  configserver:
    image: boulow/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: boulow/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started  
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: boulow/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"
  tribeservice:
    image: boulow/tribe-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      PROFILE: "dev"
      SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend
  userservice:
    image: boulow/user-service:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    environment:
      PROFILE: "dev"
      SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend
          
networks:
  backend:
    driver: bridge
    
